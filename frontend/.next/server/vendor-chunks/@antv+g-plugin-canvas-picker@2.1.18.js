"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@antv+g-plugin-canvas-picker@2.1.18";
exports.ids = ["vendor-chunks/@antv+g-plugin-canvas-picker@2.1.18"];
exports.modules = {

/***/ "(ssr)/../node_modules/.pnpm/@antv+g-plugin-canvas-picker@2.1.18/node_modules/@antv/g-plugin-canvas-picker/dist/index.esm.js":
/*!*****************************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@antv+g-plugin-canvas-picker@2.1.18/node_modules/@antv/g-plugin-canvas-picker/dist/index.esm.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Plugin: () => (/* binding */ Plugin)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(ssr)/../node_modules/.pnpm/@babel+runtime@7.26.7/node_modules/@babel/runtime/helpers/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"(ssr)/../node_modules/.pnpm/@babel+runtime@7.26.7/node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"(ssr)/../node_modules/.pnpm/@babel+runtime@7.26.7/node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _babel_runtime_helpers_callSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/callSuper */ \"(ssr)/../node_modules/.pnpm/@babel+runtime@7.26.7/node_modules/@babel/runtime/helpers/callSuper.js\");\n/* harmony import */ var _babel_runtime_helpers_callSuper__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_callSuper__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"(ssr)/../node_modules/.pnpm/@babel+runtime@7.26.7/node_modules/@babel/runtime/helpers/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _antv_g_lite__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @antv/g-lite */ \"(ssr)/../node_modules/.pnpm/@antv+g-lite@2.2.16/node_modules/@antv/g-lite/dist/index.esm.js\");\n/* harmony import */ var _babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/createForOfIteratorHelper */ \"(ssr)/../node_modules/.pnpm/@babel+runtime@7.26.7/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\");\n/* harmony import */ var _babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/regeneratorRuntime */ \"(ssr)/../node_modules/.pnpm/@babel+runtime@7.26.7/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\");\n/* harmony import */ var _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(ssr)/../node_modules/.pnpm/@babel+runtime@7.26.7/node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! gl-matrix */ \"(ssr)/../node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! gl-matrix */ \"(ssr)/../node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"(ssr)/../node_modules/.pnpm/@babel+runtime@7.26.7/node_modules/@babel/runtime/helpers/slicedToArray.js\");\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _antv_g_math__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @antv/g-math */ \"(ssr)/../node_modules/.pnpm/@antv+g-math@3.0.0/node_modules/@antv/g-math/dist/index.esm.js\");\n/* harmony import */ var _antv_util__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @antv/util */ \"(ssr)/../node_modules/.pnpm/@antv+util@3.3.10/node_modules/@antv/util/esm/path/process/arc-2-cubic.js\");\n/* harmony import */ var _antv_util__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @antv/util */ \"(ssr)/../node_modules/.pnpm/@antv+util@3.3.10/node_modules/@antv/util/esm/lodash/clamp.js\");\n/* harmony import */ var _babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @babel/runtime/helpers/objectSpread2 */ \"(ssr)/../node_modules/.pnpm/@babel+runtime@7.26.7/node_modules/@babel/runtime/helpers/objectSpread2.js\");\n/* harmony import */ var _babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_11__);\n/*!\n * @antv/g-plugin-canvas-picker\n * @description A G plugin for picking in canvas\n * @version 2.1.18\n * @date 1/23/2025, 8:35:03 AM\n * @author AntVis\n * @docs https://g.antv.antgroup.com/\n */ \n\n\n\n\n\n\n\n\n\n\n\n\n\nvar tmpVec3a = gl_matrix__WEBPACK_IMPORTED_MODULE_12__.create();\nvar tmpVec3b = gl_matrix__WEBPACK_IMPORTED_MODULE_12__.create();\nvar tmpVec3c = gl_matrix__WEBPACK_IMPORTED_MODULE_12__.create();\nvar tmpMat4 = gl_matrix__WEBPACK_IMPORTED_MODULE_13__.create();\n/**\n * pick shape(s) with Mouse/Touch event\n *\n * 1. find AABB with r-tree\n * 2. do math calculation with geometry in an accurate way\n */ var CanvasPickerPlugin = /*#__PURE__*/ function() {\n    function CanvasPickerPlugin() {\n        var _this = this;\n        _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, CanvasPickerPlugin);\n        this.isHit = function(displayObject, position, worldTransform, isClipPath) {\n            // use picker for current shape's type\n            var pick = _this.context.pointInPathPickerFactory[displayObject.nodeName];\n            if (pick) {\n                // invert with world matrix\n                var invertWorldMat = gl_matrix__WEBPACK_IMPORTED_MODULE_13__.invert(tmpMat4, worldTransform);\n                // transform client position to local space, do picking in local space\n                var localPosition = gl_matrix__WEBPACK_IMPORTED_MODULE_12__.transformMat4(tmpVec3b, gl_matrix__WEBPACK_IMPORTED_MODULE_12__.set(tmpVec3c, position[0], position[1], 0), invertWorldMat);\n                if (pick(displayObject, new _antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.Point(localPosition[0], localPosition[1]), isClipPath, _this.isPointInPath, _this.context, _this.runtime)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        /**\n     * use native picking method\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/isPointInPath\n     */ this.isPointInPath = function(displayObject, position) {\n            var context = _this.runtime.offscreenCanvasCreator.getOrCreateContext(_this.context.config.offscreenCanvas);\n            var generatePath = _this.context.pathGeneratorFactory[displayObject.nodeName];\n            if (generatePath) {\n                context.beginPath();\n                generatePath(context, displayObject.parsedStyle);\n                context.closePath();\n            }\n            return context.isPointInPath(position.x, position.y);\n        };\n    }\n    return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(CanvasPickerPlugin, [\n        {\n            key: \"apply\",\n            value: function apply(context, runtime) {\n                var _renderingContext$roo, _this2 = this;\n                var renderingService = context.renderingService, renderingContext = context.renderingContext;\n                this.context = context;\n                this.runtime = runtime;\n                var document = (_renderingContext$roo = renderingContext.root) === null || _renderingContext$roo === void 0 ? void 0 : _renderingContext$roo.ownerDocument;\n                renderingService.hooks.pick.tapPromise(CanvasPickerPlugin.tag, /*#__PURE__*/ function() {\n                    var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_8___default()(/*#__PURE__*/ _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_7___default()().mark(function _callee(result) {\n                        return _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_7___default()().wrap(function _callee$(_context) {\n                            while(1)switch(_context.prev = _context.next){\n                                case 0:\n                                    return _context.abrupt(\"return\", _this2.pick(document, result));\n                                case 1:\n                                case \"end\":\n                                    return _context.stop();\n                            }\n                        }, _callee);\n                    }));\n                    return function(_x) {\n                        return _ref.apply(this, arguments);\n                    };\n                }());\n                renderingService.hooks.pickSync.tap(CanvasPickerPlugin.tag, function(result) {\n                    return _this2.pick(document, result);\n                });\n            }\n        },\n        {\n            key: \"pick\",\n            value: function pick(document, result) {\n                var topmost = result.topmost, _result$position = result.position, x = _result$position.x, y = _result$position.y;\n                // position in world space\n                var position = gl_matrix__WEBPACK_IMPORTED_MODULE_12__.set(tmpVec3a, x, y, 0);\n                // query by AABB first with spatial index(r-tree)\n                var hitTestList = document.elementsFromBBox(position[0], position[1], position[0], position[1]);\n                // test with clip path & origin shape\n                // @see https://github.com/antvis/g/issues/1064\n                var pickedDisplayObjects = [];\n                var _iterator = _babel_runtime_helpers_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_6___default()(hitTestList), _step;\n                try {\n                    for(_iterator.s(); !(_step = _iterator.n()).done;){\n                        var _displayObject = _step.value;\n                        var worldTransform = _displayObject.getWorldTransform();\n                        var isHitOriginShape = this.isHit(_displayObject, position, worldTransform, false);\n                        if (isHitOriginShape) {\n                            // should look up in the ancestor node\n                            var clipped = (0,_antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.findClosestClipPathTarget)(_displayObject);\n                            if (clipped) {\n                                var clipPath = clipped.parsedStyle.clipPath;\n                                var isHitClipPath = this.isHit(clipPath, position, clipPath.getWorldTransform(), true);\n                                if (isHitClipPath) {\n                                    if (topmost) {\n                                        result.picked = [\n                                            _displayObject\n                                        ];\n                                        return result;\n                                    }\n                                    pickedDisplayObjects.push(_displayObject);\n                                }\n                            } else {\n                                if (topmost) {\n                                    result.picked = [\n                                        _displayObject\n                                    ];\n                                    return result;\n                                }\n                                pickedDisplayObjects.push(_displayObject);\n                            }\n                        }\n                    }\n                } catch (err) {\n                    _iterator.e(err);\n                } finally{\n                    _iterator.f();\n                }\n                result.picked = pickedDisplayObjects;\n                return result;\n            }\n        }\n    ]);\n}();\nCanvasPickerPlugin.tag = \"CanvasPicker\";\nfunction isPointInPath$8(displayObject, position, isClipPath) {\n    var _ref = displayObject.parsedStyle, _ref$cx = _ref.cx, cx = _ref$cx === void 0 ? 0 : _ref$cx, _ref$cy = _ref.cy, cy = _ref$cy === void 0 ? 0 : _ref$cy, r = _ref.r, fill = _ref.fill, stroke = _ref.stroke, _ref$lineWidth = _ref.lineWidth, lineWidth = _ref$lineWidth === void 0 ? 1 : _ref$lineWidth, _ref$increasedLineWid = _ref.increasedLineWidthForHitTesting, increasedLineWidthForHitTesting = _ref$increasedLineWid === void 0 ? 0 : _ref$increasedLineWid, _ref$pointerEvents = _ref.pointerEvents, pointerEvents = _ref$pointerEvents === void 0 ? \"auto\" : _ref$pointerEvents;\n    var halfLineWidth = (lineWidth + increasedLineWidthForHitTesting) / 2;\n    var absDistance = (0,_antv_g_math__WEBPACK_IMPORTED_MODULE_10__.distance)(cx, cy, position.x, position.y);\n    var _isFillOrStrokeAffect = (0,_antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.isFillOrStrokeAffected)(pointerEvents, fill, stroke), _isFillOrStrokeAffect2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_9___default()(_isFillOrStrokeAffect, 2), hasFill = _isFillOrStrokeAffect2[0], hasStroke = _isFillOrStrokeAffect2[1];\n    if (hasFill && hasStroke || isClipPath) {\n        return absDistance <= r + halfLineWidth;\n    }\n    if (hasFill) {\n        return absDistance <= r;\n    }\n    if (hasStroke) {\n        return absDistance >= r - halfLineWidth && absDistance <= r + halfLineWidth;\n    }\n    return false;\n}\nfunction ellipseDistance(squareX, squareY, rx, ry) {\n    return squareX / (rx * rx) + squareY / (ry * ry);\n}\nfunction isPointInPath$7(displayObject, position, isClipPath) {\n    var _ref = displayObject.parsedStyle, _ref$cx = _ref.cx, cx = _ref$cx === void 0 ? 0 : _ref$cx, _ref$cy = _ref.cy, cy = _ref$cy === void 0 ? 0 : _ref$cy, rx = _ref.rx, ry = _ref.ry, fill = _ref.fill, stroke = _ref.stroke, _ref$lineWidth = _ref.lineWidth, lineWidth = _ref$lineWidth === void 0 ? 1 : _ref$lineWidth, _ref$increasedLineWid = _ref.increasedLineWidthForHitTesting, increasedLineWidthForHitTesting = _ref$increasedLineWid === void 0 ? 0 : _ref$increasedLineWid, _ref$pointerEvents = _ref.pointerEvents, pointerEvents = _ref$pointerEvents === void 0 ? \"auto\" : _ref$pointerEvents;\n    var x = position.x, y = position.y;\n    var _isFillOrStrokeAffect = (0,_antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.isFillOrStrokeAffected)(pointerEvents, fill, stroke), _isFillOrStrokeAffect2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_9___default()(_isFillOrStrokeAffect, 2), hasFill = _isFillOrStrokeAffect2[0], hasStroke = _isFillOrStrokeAffect2[1];\n    var halfLineWith = (lineWidth + increasedLineWidthForHitTesting) / 2;\n    var squareX = (x - cx) * (x - cx);\n    var squareY = (y - cy) * (y - cy);\n    // 使用椭圆的公式： x*x/rx*rx + y*y/ry*ry = 1;\n    if (hasFill && hasStroke || isClipPath) {\n        return ellipseDistance(squareX, squareY, rx + halfLineWith, ry + halfLineWith) <= 1;\n    }\n    if (hasFill) {\n        return ellipseDistance(squareX, squareY, rx, ry) <= 1;\n    }\n    if (hasStroke) {\n        return ellipseDistance(squareX, squareY, rx - halfLineWith, ry - halfLineWith) >= 1 && ellipseDistance(squareX, squareY, rx + halfLineWith, ry + halfLineWith) <= 1;\n    }\n    return false;\n}\nfunction inBox(minX, minY, width, height, x, y) {\n    return x >= minX && x <= minX + width && y >= minY && y <= minY + height;\n}\nfunction inRect(minX, minY, width, height, lineWidth, x, y) {\n    var halfWidth = lineWidth / 2;\n    // 将四个边看做矩形来检测，比边的检测算法要快\n    return inBox(minX - halfWidth, minY - halfWidth, width, lineWidth, x, y) || // 上边\n    inBox(minX + width - halfWidth, minY - halfWidth, lineWidth, height, x, y) || // 右边\n    inBox(minX + halfWidth, minY + height - halfWidth, width, lineWidth, x, y) || // 下边\n    inBox(minX - halfWidth, minY + halfWidth, lineWidth, height, x, y); // 左边\n}\nfunction inArc(cx, cy, r, startAngle, endAngle, lineWidth, x, y) {\n    var angle = (Math.atan2(y - cy, x - cx) + Math.PI * 2) % (Math.PI * 2); // 转换到 0 - 2 * Math.PI 之间\n    // if (angle < startAngle || angle > endAngle) {\n    //   return false;\n    // }\n    var point = {\n        x: cx + r * Math.cos(angle),\n        y: cy + r * Math.sin(angle)\n    };\n    return (0,_antv_g_math__WEBPACK_IMPORTED_MODULE_10__.distance)(point.x, point.y, x, y) <= lineWidth / 2;\n}\nfunction inLine(x1, y1, x2, y2, lineWidth, x, y) {\n    var minX = Math.min(x1, x2);\n    var maxX = Math.max(x1, x2);\n    var minY = Math.min(y1, y2);\n    var maxY = Math.max(y1, y2);\n    var halfWidth = lineWidth / 2;\n    // 因为目前的方案是计算点到直线的距离，而有可能会在延长线上，所以要先判断是否在包围盒内\n    // 这种方案会在水平或者竖直的情况下载线的延长线上有半 lineWidth 的误差\n    if (!(x >= minX - halfWidth && x <= maxX + halfWidth && y >= minY - halfWidth && y <= maxY + halfWidth)) {\n        return false;\n    }\n    // 因为已经计算了包围盒，所以仅需要计算到直线的距离即可，可以显著提升性能\n    return (0,_antv_g_math__WEBPACK_IMPORTED_MODULE_10__.linePointToLine)(x1, y1, x2, y2, x, y) <= lineWidth / 2;\n}\nfunction inPolyline(points, lineWidth, x, y, isClose) {\n    var count = points.length;\n    if (count < 2) {\n        return false;\n    }\n    for(var i = 0; i < count - 1; i++){\n        var x1 = points[i][0];\n        var y1 = points[i][1];\n        var x2 = points[i + 1][0];\n        var y2 = points[i + 1][1];\n        if (inLine(x1, y1, x2, y2, lineWidth, x, y)) {\n            return true;\n        }\n    }\n    // 如果封闭，则计算起始点和结束点的边\n    if (isClose) {\n        var first = points[0];\n        var last = points[count - 1];\n        if (inLine(first[0], first[1], last[0], last[1], lineWidth, x, y)) {\n            return true;\n        }\n    }\n    return false;\n}\n// 多边形的射线检测，参考：https://blog.csdn.net/WilliamSun0122/article/details/77994526\nvar tolerance = 1e-6;\n// 三态函数，判断两个double在eps精度下的大小关系\nfunction dcmp(x) {\n    if (Math.abs(x) < tolerance) {\n        return 0;\n    }\n    return x < 0 ? -1 : 1;\n}\n// 判断点Q是否在p1和p2的线段上\nfunction onSegment(p1, p2, q) {\n    if ((q[0] - p1[0]) * (p2[1] - p1[1]) === (p2[0] - p1[0]) * (q[1] - p1[1]) && Math.min(p1[0], p2[0]) <= q[0] && q[0] <= Math.max(p1[0], p2[0]) && Math.min(p1[1], p2[1]) <= q[1] && q[1] <= Math.max(p1[1], p2[1])) {\n        return true;\n    }\n    return false;\n}\n// 判断点P在多边形内-射线法\nfunction inPolygon(points, x, y) {\n    var isHit = false;\n    var n = points.length;\n    if (n <= 2) {\n        // svg 中点小于 3 个时，不显示，也无法被拾取\n        return false;\n    }\n    for(var i = 0; i < n; i++){\n        var p1 = points[i];\n        var p2 = points[(i + 1) % n];\n        if (onSegment(p1, p2, [\n            x,\n            y\n        ])) {\n            // 点在多边形一条边上\n            return true;\n        }\n        // 前一个判断min(p1[1],p2[1])<P.y<=max(p1[1],p2[1])\n        // 后一个判断被测点 在 射线与边交点 的左边\n        if (dcmp(p1[1] - y) > 0 !== dcmp(p2[1] - y) > 0 && dcmp(x - (y - p1[1]) * (p1[0] - p2[0]) / (p1[1] - p2[1]) - p1[0]) < 0) {\n            isHit = !isHit;\n        }\n    }\n    return isHit;\n}\nfunction inPolygons(polygons, x, y) {\n    var isHit = false;\n    for(var i = 0; i < polygons.length; i++){\n        var points = polygons[i];\n        isHit = inPolygon(points, x, y);\n        if (isHit) {\n            break;\n        }\n    }\n    return isHit;\n}\nfunction isPointInPath$6(displayObject, position, isClipPath) {\n    var _ref = displayObject.parsedStyle, x1 = _ref.x1, y1 = _ref.y1, x2 = _ref.x2, y2 = _ref.y2, _ref$lineWidth = _ref.lineWidth, lineWidth = _ref$lineWidth === void 0 ? 1 : _ref$lineWidth, _ref$increasedLineWid = _ref.increasedLineWidthForHitTesting, increasedLineWidthForHitTesting = _ref$increasedLineWid === void 0 ? 0 : _ref$increasedLineWid, _ref$pointerEvents = _ref.pointerEvents, pointerEvents = _ref$pointerEvents === void 0 ? \"auto\" : _ref$pointerEvents, fill = _ref.fill, stroke = _ref.stroke;\n    var _isFillOrStrokeAffect = (0,_antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.isFillOrStrokeAffected)(pointerEvents, fill, stroke), _isFillOrStrokeAffect2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_9___default()(_isFillOrStrokeAffect, 2), hasStroke = _isFillOrStrokeAffect2[1];\n    if (!hasStroke && !isClipPath || !lineWidth) {\n        return false;\n    }\n    return inLine(x1, y1, x2, y2, lineWidth + increasedLineWidthForHitTesting, position.x, position.y);\n}\n// TODO: replace it with method in @antv/util\nfunction isPointInStroke(segments, lineWidth, px, py, length) {\n    var isHit = false;\n    var halfWidth = lineWidth / 2;\n    for(var i = 0; i < segments.length; i++){\n        var segment = segments[i];\n        var currentPoint = segment.currentPoint, params = segment.params, prePoint = segment.prePoint, box = segment.box;\n        // 如果在前面已经生成过包围盒，直接按照包围盒计算\n        if (box && !inBox(box.x - halfWidth, box.y - halfWidth, box.width + lineWidth, box.height + lineWidth, px, py)) {\n            continue;\n        }\n        switch(segment.command){\n            // L 和 Z 都是直线， M 不进行拾取\n            case \"L\":\n            case \"Z\":\n                isHit = inLine(prePoint[0], prePoint[1], currentPoint[0], currentPoint[1], lineWidth, px, py);\n                if (isHit) {\n                    return true;\n                }\n                break;\n            case \"Q\":\n                var qDistance = (0,_antv_g_math__WEBPACK_IMPORTED_MODULE_10__.quadPointDistance)(prePoint[0], prePoint[1], params[1], params[2], params[3], params[4], px, py);\n                isHit = qDistance <= lineWidth / 2;\n                if (isHit) {\n                    return true;\n                }\n                break;\n            case \"C\":\n                var cDistance = (0,_antv_g_math__WEBPACK_IMPORTED_MODULE_10__.cubicPointDistance)(prePoint[0], // 上一段结束位置, 即 C 的起始点\n                prePoint[1], params[1], // 'C' 的参数，1、2 为第一个控制点，3、4 为第二个控制点，5、6 为结束点\n                params[2], params[3], params[4], params[5], params[6], px, py, length);\n                isHit = cDistance <= lineWidth / 2;\n                if (isHit) {\n                    return true;\n                }\n                break;\n            case \"A\":\n                // cache conversion result\n                if (!segment.cubicParams) {\n                    segment.cubicParams = (0,_antv_util__WEBPACK_IMPORTED_MODULE_14__.arcToCubic)(prePoint[0], prePoint[1], params[1], params[2], params[3], params[4], params[5], params[6], params[7], undefined);\n                }\n                var args = segment.cubicParams;\n                // fixArc\n                var prePointInCubic = prePoint;\n                for(var _i = 0; _i < args.length; _i += 6){\n                    var _cDistance = (0,_antv_g_math__WEBPACK_IMPORTED_MODULE_10__.cubicPointDistance)(prePointInCubic[0], // 上一段结束位置, 即 C 的起始点\n                    prePointInCubic[1], args[_i], args[_i + 1], args[_i + 2], args[_i + 3], args[_i + 4], args[_i + 5], px, py, length);\n                    prePointInCubic = [\n                        args[_i + 4],\n                        args[_i + 5]\n                    ];\n                    isHit = _cDistance <= lineWidth / 2;\n                    if (isHit) {\n                        return true;\n                    }\n                }\n                break;\n        }\n    }\n    return isHit;\n}\nfunction isPointInPath$5(displayObject, position, isClipPath, isPointInPath, renderingPluginContext, runtime) {\n    var _ref = displayObject.parsedStyle, _ref$lineWidth = _ref.lineWidth, lineWidth = _ref$lineWidth === void 0 ? 1 : _ref$lineWidth, _ref$increasedLineWid = _ref.increasedLineWidthForHitTesting, increasedLineWidthForHitTesting = _ref$increasedLineWid === void 0 ? 0 : _ref$increasedLineWid, stroke = _ref.stroke, fill = _ref.fill, d = _ref.d, _ref$pointerEvents = _ref.pointerEvents, pointerEvents = _ref$pointerEvents === void 0 ? \"auto\" : _ref$pointerEvents;\n    var segments = d.segments, hasArc = d.hasArc, polylines = d.polylines, polygons = d.polygons;\n    var _isFillOrStrokeAffect = (0,_antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.isFillOrStrokeAffected)(pointerEvents, // Only a closed path can be filled.\n    (polygons === null || polygons === void 0 ? void 0 : polygons.length) && fill, stroke), _isFillOrStrokeAffect2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_9___default()(_isFillOrStrokeAffect, 2), hasFill = _isFillOrStrokeAffect2[0], hasStroke = _isFillOrStrokeAffect2[1];\n    var totalLength = (0,_antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.getOrCalculatePathTotalLength)(displayObject);\n    var isHit = false;\n    if (hasFill || isClipPath) {\n        if (hasArc) {\n            // 存在曲线时，暂时使用 canvas 的 api 计算，后续可以进行多边形切割\n            isHit = isPointInPath(displayObject, position);\n        } else {\n            // 提取出来的多边形包含闭合的和非闭合的，在这里统一按照多边形处理\n            isHit = inPolygons(polygons, position.x, position.y) || inPolygons(polylines, position.x, position.y);\n        }\n        return isHit;\n    }\n    if (hasStroke || isClipPath) {\n        isHit = isPointInStroke(segments, lineWidth + increasedLineWidthForHitTesting, position.x, position.y, totalLength);\n    }\n    return isHit;\n}\nfunction isPointInPath$4(displayObject, position, isClipPath) {\n    var _ref = displayObject.parsedStyle, stroke = _ref.stroke, fill = _ref.fill, _ref$lineWidth = _ref.lineWidth, lineWidth = _ref$lineWidth === void 0 ? 1 : _ref$lineWidth, _ref$increasedLineWid = _ref.increasedLineWidthForHitTesting, increasedLineWidthForHitTesting = _ref$increasedLineWid === void 0 ? 0 : _ref$increasedLineWid, points = _ref.points, _ref$pointerEvents = _ref.pointerEvents, pointerEvents = _ref$pointerEvents === void 0 ? \"auto\" : _ref$pointerEvents;\n    var _isFillOrStrokeAffect = (0,_antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.isFillOrStrokeAffected)(pointerEvents, fill, stroke), _isFillOrStrokeAffect2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_9___default()(_isFillOrStrokeAffect, 2), hasFill = _isFillOrStrokeAffect2[0], hasStroke = _isFillOrStrokeAffect2[1];\n    var isHit = false;\n    if (hasStroke || isClipPath) {\n        isHit = inPolyline(points.points, lineWidth + increasedLineWidthForHitTesting, position.x, position.y, true);\n    }\n    if (!isHit && (hasFill || isClipPath)) {\n        isHit = inPolygon(points.points, position.x, position.y);\n    }\n    return isHit;\n}\nfunction isPointInPath$3(displayObject, position, isClipPath) {\n    var _ref = displayObject.parsedStyle, _ref$lineWidth = _ref.lineWidth, lineWidth = _ref$lineWidth === void 0 ? 1 : _ref$lineWidth, _ref$increasedLineWid = _ref.increasedLineWidthForHitTesting, increasedLineWidthForHitTesting = _ref$increasedLineWid === void 0 ? 0 : _ref$increasedLineWid, points = _ref.points, _ref$pointerEvents = _ref.pointerEvents, pointerEvents = _ref$pointerEvents === void 0 ? \"auto\" : _ref$pointerEvents, fill = _ref.fill, stroke = _ref.stroke;\n    var _isFillOrStrokeAffect = (0,_antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.isFillOrStrokeAffected)(pointerEvents, fill, stroke), _isFillOrStrokeAffect2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_9___default()(_isFillOrStrokeAffect, 2), hasStroke = _isFillOrStrokeAffect2[1];\n    if (!hasStroke && !isClipPath || !lineWidth) {\n        return false;\n    }\n    return inPolyline(points.points, lineWidth + increasedLineWidthForHitTesting, position.x, position.y, false);\n}\nfunction isPointInPath$2(displayObject, position, isClipPath, isPointInPath, runtime) {\n    var _ref = displayObject.parsedStyle, radius = _ref.radius, fill = _ref.fill, stroke = _ref.stroke, _ref$lineWidth = _ref.lineWidth, lineWidth = _ref$lineWidth === void 0 ? 1 : _ref$lineWidth, _ref$increasedLineWid = _ref.increasedLineWidthForHitTesting, increasedLineWidthForHitTesting = _ref$increasedLineWid === void 0 ? 0 : _ref$increasedLineWid, _ref$x = _ref.x, x = _ref$x === void 0 ? 0 : _ref$x, _ref$y = _ref.y, y = _ref$y === void 0 ? 0 : _ref$y, width = _ref.width, height = _ref.height, _ref$pointerEvents = _ref.pointerEvents, pointerEvents = _ref$pointerEvents === void 0 ? \"auto\" : _ref$pointerEvents;\n    var _isFillOrStrokeAffect = (0,_antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.isFillOrStrokeAffected)(pointerEvents, fill, stroke), _isFillOrStrokeAffect2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_9___default()(_isFillOrStrokeAffect, 2), hasFill = _isFillOrStrokeAffect2[0], hasStroke = _isFillOrStrokeAffect2[1];\n    var hasRadius = radius && radius.some(function(r) {\n        return r !== 0;\n    });\n    var lineWidthForHitTesting = lineWidth + increasedLineWidthForHitTesting;\n    // 无圆角时的策略\n    if (!hasRadius) {\n        var halfWidth = lineWidthForHitTesting / 2;\n        // 同时填充和带有边框\n        if (hasFill && hasStroke || isClipPath) {\n            return inBox(x - halfWidth, y - halfWidth, width + halfWidth, height + halfWidth, position.x, position.y);\n        }\n        // 仅填充\n        if (hasFill) {\n            return inBox(x, y, width, height, position.x, position.y);\n        }\n        if (hasStroke) {\n            return inRect(x, y, width, height, lineWidthForHitTesting, position.x, position.y);\n        }\n    } else {\n        var isHit = false;\n        if (hasStroke || isClipPath) {\n            isHit = inRectWithRadius(x, y, width, height, radius.map(function(r) {\n                return (0,_antv_util__WEBPACK_IMPORTED_MODULE_15__[\"default\"])(r, 0, Math.min(Math.abs(width) / 2, Math.abs(height) / 2));\n            }), lineWidthForHitTesting, position.x, position.y);\n        }\n        // 仅填充时带有圆角的矩形直接通过图形拾取\n        // 以后可以改成纯数学的近似拾取，将圆弧切割成多边形\n        if (!isHit && (hasFill || isClipPath)) {\n            isHit = isPointInPath(displayObject, position);\n        }\n        return isHit;\n    }\n    return false;\n}\nfunction inRectWithRadius(minX, minY, width, height, radiusArray, lineWidth, x, y) {\n    var _radiusArray = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_9___default()(radiusArray, 4), tlr = _radiusArray[0], trr = _radiusArray[1], brr = _radiusArray[2], blr = _radiusArray[3];\n    return inLine(minX + tlr, minY, minX + width - trr, minY, lineWidth, x, y) || inLine(minX + width, minY + trr, minX + width, minY + height - brr, lineWidth, x, y) || inLine(minX + width - brr, minY + height, minX + blr, minY + height, lineWidth, x, y) || inLine(minX, minY + height - blr, minX, minY + tlr, lineWidth, x, y) || inArc(minX + width - trr, minY + trr, trr, 1.5 * Math.PI, 2 * Math.PI, lineWidth, x, y) || inArc(minX + width - brr, minY + height - brr, brr, 0, 0.5 * Math.PI, lineWidth, x, y) || inArc(minX + blr, minY + height - blr, blr, 0.5 * Math.PI, Math.PI, lineWidth, x, y) || inArc(minX + tlr, minY + tlr, tlr, Math.PI, 1.5 * Math.PI, lineWidth, x, y);\n}\nfunction isPointInPath$1(displayObject, position, isClipPath, isPointInPath, renderingPluginContext, runtime) {\n    var _ref = displayObject.parsedStyle, _ref$pointerEvents = _ref.pointerEvents, pointerEvents = _ref$pointerEvents === void 0 ? \"auto\" : _ref$pointerEvents, _ref$x = _ref.x, x = _ref$x === void 0 ? 0 : _ref$x, _ref$y = _ref.y, y = _ref$y === void 0 ? 0 : _ref$y, width = _ref.width, height = _ref.height;\n    if (pointerEvents === \"non-transparent-pixel\") {\n        var offscreenCanvas = renderingPluginContext.config.offscreenCanvas;\n        var canvas = runtime.offscreenCanvasCreator.getOrCreateCanvas(offscreenCanvas);\n        var context = runtime.offscreenCanvasCreator.getOrCreateContext(offscreenCanvas, {\n            willReadFrequently: true\n        });\n        canvas.width = width;\n        canvas.height = height;\n        renderingPluginContext.defaultStyleRendererFactory[_antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.Shape.IMAGE].render(context, _babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_11___default()(_babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_11___default()({}, displayObject.parsedStyle), {}, {\n            x: 0,\n            y: 0\n        }), displayObject, undefined, undefined, undefined);\n        var imagedata = context.getImageData(position.x - x, position.y - y, 1, 1).data;\n        return imagedata.every(function(component) {\n            return component !== 0;\n        });\n    }\n    return true;\n}\nfunction isPointInPath(displayObject, position, isClipPath, isPointInPath) {\n    var bounds = displayObject.getGeometryBounds();\n    // @see https://stackoverflow.com/questions/28706989/how-do-i-check-if-a-mouse-click-is-inside-a-rotated-text-on-the-html5-canvas-in\n    return position.x >= bounds.min[0] && position.y >= bounds.min[1] && position.x <= bounds.max[0] && position.y <= bounds.max[1];\n}\nvar Plugin = /*#__PURE__*/ function(_AbstractRendererPlug) {\n    function Plugin() {\n        var _this;\n        _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, Plugin);\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        _this = _babel_runtime_helpers_callSuper__WEBPACK_IMPORTED_MODULE_3___default()(this, Plugin, [].concat(args));\n        _this.name = \"canvas-picker\";\n        return _this;\n    }\n    _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(Plugin, _AbstractRendererPlug);\n    return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(Plugin, [\n        {\n            key: \"init\",\n            value: function init() {\n                var _pointInPathPickerFac;\n                var pointInPathPickerFactory = (_pointInPathPickerFac = {}, _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_pointInPathPickerFac, _antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.Shape.CIRCLE, isPointInPath$8), _antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.Shape.ELLIPSE, isPointInPath$7), _antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.Shape.RECT, isPointInPath$2), _antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.Shape.LINE, isPointInPath$6), _antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.Shape.POLYLINE, isPointInPath$3), _antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.Shape.POLYGON, isPointInPath$4), _antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.Shape.PATH, isPointInPath$5), _antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.Shape.TEXT, isPointInPath), _antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.Shape.GROUP, null), _antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.Shape.IMAGE, isPointInPath$1), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_pointInPathPickerFac, _antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.Shape.HTML, null), _antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.Shape.MESH, null));\n                // @ts-ignore\n                this.context.pointInPathPickerFactory = pointInPathPickerFactory;\n                this.addRenderingPlugin(new CanvasPickerPlugin());\n            }\n        },\n        {\n            key: \"destroy\",\n            value: function destroy() {\n                // @ts-ignore\n                delete this.context.pointInPathPickerFactory;\n                this.removeAllRenderingPlugins();\n            }\n        }\n    ]);\n}(_antv_g_lite__WEBPACK_IMPORTED_MODULE_5__.AbstractRendererPlugin);\n //# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/@antv+g-plugin-canvas-picker@2.1.18/node_modules/@antv/g-plugin-canvas-picker/dist/index.esm.js\n");

/***/ })

};
;
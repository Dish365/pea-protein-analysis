# Generated by Django 5.1.4 on 2025-01-20 08:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProcessAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_type', models.CharField(choices=[('baseline', 'Baseline'), ('rf', 'RF Treatment'), ('ir', 'IR Treatment')], max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('progress', models.IntegerField(default=0)),
                ('input_mass', models.FloatField(help_text='Input mass in kg')),
                ('output_mass', models.FloatField(help_text='Output mass in kg')),
                ('initial_protein_content', models.FloatField(help_text='Initial protein content in %')),
                ('final_protein_content', models.FloatField(help_text='Final protein content in %')),
                ('initial_moisture_content', models.FloatField(help_text='Initial moisture content in %')),
                ('final_moisture_content', models.FloatField(help_text='Final moisture content in %')),
                ('moisture_reduction', models.FloatField(help_text='Moisture reduction achieved in %', null=True)),
                ('d10_particle_size', models.FloatField(help_text='D10 particle size in μm')),
                ('d50_particle_size', models.FloatField(help_text='D50 particle size in μm')),
                ('d90_particle_size', models.FloatField(help_text='D90 particle size in μm')),
                ('air_flow', models.FloatField(help_text='Air flow rate in m³/h')),
                ('classifier_speed', models.FloatField(help_text='Classifier wheel speed in rpm')),
                ('equipment_cost', models.FloatField(help_text='Equipment cost in USD')),
                ('maintenance_cost', models.FloatField(help_text='Annual maintenance cost in USD')),
                ('raw_material_cost', models.FloatField(help_text='Raw material cost per kg in USD')),
                ('utility_cost', models.FloatField(help_text='Utility cost per hour in USD')),
                ('labor_cost', models.FloatField(help_text='Labor cost per hour in USD')),
                ('project_duration', models.IntegerField(help_text='Project duration in years')),
                ('discount_rate', models.FloatField(help_text='Discount rate in decimal')),
                ('production_volume', models.FloatField(help_text='Annual production volume in kg')),
                ('electricity_consumption', models.FloatField(help_text='Electricity consumption in kWh')),
                ('cooling_consumption', models.FloatField(help_text='Cooling energy consumption in kWh')),
                ('water_consumption', models.FloatField(help_text='Water consumption in kg')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='AnalysisResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('technical_results', models.JSONField(null=True)),
                ('economic_results', models.JSONField(null=True)),
                ('environmental_results', models.JSONField(null=True)),
                ('efficiency_results', models.JSONField(null=True)),
                ('process', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='process_data.processanalysis')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]

"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@antv+g-plugin-image-loader@2.1.18";
exports.ids = ["vendor-chunks/@antv+g-plugin-image-loader@2.1.18"];
exports.modules = {

/***/ "(ssr)/../node_modules/.pnpm/@antv+g-plugin-image-loader@2.1.18/node_modules/@antv/g-plugin-image-loader/dist/index.esm.js":
/*!***************************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@antv+g-plugin-image-loader@2.1.18/node_modules/@antv/g-plugin-image-loader/dist/index.esm.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImagePool: () => (/* binding */ ImagePool),\n/* harmony export */   Plugin: () => (/* binding */ Plugin)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"(ssr)/../node_modules/.pnpm/@babel+runtime@7.26.7/node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"(ssr)/../node_modules/.pnpm/@babel+runtime@7.26.7/node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_helpers_callSuper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/callSuper */ \"(ssr)/../node_modules/.pnpm/@babel+runtime@7.26.7/node_modules/@babel/runtime/helpers/callSuper.js\");\n/* harmony import */ var _babel_runtime_helpers_callSuper__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_callSuper__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"(ssr)/../node_modules/.pnpm/@babel+runtime@7.26.7/node_modules/@babel/runtime/helpers/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _antv_g_lite__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @antv/g-lite */ \"(ssr)/../node_modules/.pnpm/@antv+g-lite@2.2.16/node_modules/@antv/g-lite/dist/index.esm.js\");\n/* harmony import */ var _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/regeneratorRuntime */ \"(ssr)/../node_modules/.pnpm/@babel+runtime@7.26.7/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\");\n/* harmony import */ var _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/objectSpread2 */ \"(ssr)/../node_modules/.pnpm/@babel+runtime@7.26.7/node_modules/@babel/runtime/helpers/objectSpread2.js\");\n/* harmony import */ var _babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"(ssr)/../node_modules/.pnpm/@babel+runtime@7.26.7/node_modules/@babel/runtime/helpers/slicedToArray.js\");\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(ssr)/../node_modules/.pnpm/@babel+runtime@7.26.7/node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _antv_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @antv/util */ \"(ssr)/../node_modules/.pnpm/@antv+util@3.3.10/node_modules/@antv/util/esm/lodash/is-string.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! gl-matrix */ \"(ssr)/../node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/mat4.js\");\n/*!\n * @antv/g-plugin-image-loader\n * @description A G plugin for loading image\n * @version 2.1.18\n * @date 1/23/2025, 8:33:24 AM\n * @author AntVis\n * @docs https://g.antv.antgroup.com/\n */ \n\n\n\n\n\n\n\n\n\n\nvar RefCountCache = /*#__PURE__*/ function() {\n    function RefCountCache() {\n        _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, RefCountCache);\n        this.cacheStore = new Map();\n    }\n    return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(RefCountCache, [\n        {\n            key: \"onRefAdded\",\n            value: function onRefAdded(ref) {}\n        },\n        {\n            key: \"has\",\n            value: function has(key) {\n                return this.cacheStore.has(key);\n            }\n        },\n        {\n            key: \"put\",\n            value: function put(key, item, ref) {\n                if (this.cacheStore.has(key)) {\n                    return false;\n                }\n                this.cacheStore.set(key, {\n                    value: item,\n                    counter: new Set([\n                        ref\n                    ])\n                });\n                this.onRefAdded(ref);\n                return true;\n            }\n        },\n        {\n            key: \"get\",\n            value: function get(key, ref) {\n                var cacheItem = this.cacheStore.get(key);\n                if (!cacheItem) {\n                    return null;\n                }\n                if (!cacheItem.counter.has(ref)) {\n                    cacheItem.counter.add(ref);\n                    this.onRefAdded(ref);\n                }\n                return cacheItem.value;\n            }\n        },\n        {\n            key: \"update\",\n            value: function update(key, value, ref) {\n                var cacheItem = this.cacheStore.get(key);\n                if (!cacheItem) {\n                    return false;\n                }\n                cacheItem.value = _babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_6___default()(_babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_6___default()({}, cacheItem.value), value);\n                if (!cacheItem.counter.has(ref)) {\n                    cacheItem.counter.add(ref);\n                    this.onRefAdded(ref);\n                }\n                return true;\n            }\n        },\n        {\n            key: \"release\",\n            value: function release(key, ref) {\n                var cacheItem = this.cacheStore.get(key);\n                if (!cacheItem) {\n                    return false;\n                }\n                cacheItem.counter[\"delete\"](ref);\n                if (cacheItem.counter.size <= 0) {\n                    this.cacheStore[\"delete\"](key);\n                }\n                return true;\n            }\n        },\n        {\n            key: \"releaseRef\",\n            value: function releaseRef(ref) {\n                var _this = this;\n                Array.from(this.cacheStore.keys()).forEach(function(key) {\n                    _this.release(key, ref);\n                });\n            }\n        },\n        {\n            key: \"getSize\",\n            value: function getSize() {\n                return this.cacheStore.size;\n            }\n        },\n        {\n            key: \"clear\",\n            value: function clear() {\n                this.cacheStore.clear();\n            }\n        }\n    ]);\n}();\nvar tasks = [];\nvar nextFrameTasks = [];\nvar ImageSlicer = /*#__PURE__*/ function() {\n    function ImageSlicer() {\n        _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, ImageSlicer);\n    }\n    return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(ImageSlicer, null, [\n        {\n            key: \"stop\",\n            value: function stop() {\n                var api = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ImageSlicer.api;\n                if (ImageSlicer.rafId) {\n                    api.cancelAnimationFrame(ImageSlicer.rafId);\n                    ImageSlicer.rafId = null;\n                }\n            }\n        },\n        {\n            key: \"executeTask\",\n            value: function executeTask() {\n                var api = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ImageSlicer.api;\n                if (tasks.length <= 0 && nextFrameTasks.length <= 0) {\n                    return;\n                }\n                nextFrameTasks.forEach(function(task) {\n                    return task();\n                });\n                nextFrameTasks = tasks.splice(0, ImageSlicer.TASK_NUM_PER_FRAME);\n                ImageSlicer.rafId = api.requestAnimationFrame(function() {\n                    ImageSlicer.executeTask(api);\n                });\n            }\n        },\n        {\n            key: \"sliceImage\",\n            value: function sliceImage(image, sliceWidth, sliceHeight, rerender) {\n                var overlap = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n                var api = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : ImageSlicer.api;\n                var imageWidth = image.naturalWidth || image.width;\n                var imageHeight = image.naturalHeight || image.height;\n                // 计算步长(考虑重叠区域)\n                var strideW = sliceWidth - overlap;\n                var strideH = sliceHeight - overlap;\n                // 计算网格尺寸\n                var gridCols = Math.ceil(imageWidth / strideW);\n                var gridRows = Math.ceil(imageHeight / strideH);\n                var result = {\n                    tileSize: [\n                        sliceWidth,\n                        sliceHeight\n                    ],\n                    gridSize: [\n                        gridRows,\n                        gridCols\n                    ],\n                    tiles: Array(gridRows).fill(null).map(function() {\n                        return Array(gridCols).fill(null);\n                    })\n                };\n                // 遍历网格创建切片\n                var _loop = function _loop(row) {\n                    var _loop2 = function _loop2(col) {\n                        tasks.push(function() {\n                            // 计算当前切片的坐标\n                            var startX = col * strideW;\n                            var startY = row * strideH;\n                            // 处理最后一列/行的特殊情况\n                            var _ref = [\n                                Math.min(sliceWidth, imageWidth - startX),\n                                Math.min(sliceHeight, imageHeight - startY)\n                            ], tempSliceWidth = _ref[0], tempSliceHeight = _ref[1];\n                            // 创建切片canvas\n                            var sliceCanvas = api.createCanvas();\n                            sliceCanvas.width = sliceWidth;\n                            sliceCanvas.height = sliceHeight;\n                            var sliceCtx = sliceCanvas.getContext(\"2d\");\n                            // 将图像部分绘制到切片canvas上\n                            sliceCtx.drawImage(image, startX, startY, tempSliceWidth, tempSliceHeight, 0, 0, tempSliceWidth, tempSliceHeight);\n                            // 存储切片信息\n                            result.tiles[row][col] = {\n                                x: startX,\n                                y: startY,\n                                tileX: col,\n                                tileY: row,\n                                data: sliceCanvas\n                            };\n                            rerender();\n                        });\n                    };\n                    for(var col = 0; col < gridCols; col++){\n                        _loop2(col);\n                    }\n                };\n                for(var row = 0; row < gridRows; row++){\n                    _loop(row);\n                }\n                ImageSlicer.stop();\n                ImageSlicer.executeTask();\n                return result;\n            }\n        }\n    ]);\n}();\nImageSlicer.TASK_NUM_PER_FRAME = 10;\nvar IMAGE_CACHE = new RefCountCache();\nIMAGE_CACHE.onRefAdded = function onRefAdded(ref) {\n    var _this = this;\n    ref.addEventListener(_antv_g_lite__WEBPACK_IMPORTED_MODULE_4__.ElementEvent.DESTROY, function() {\n        _this.releaseRef(ref);\n    }, {\n        once: true\n    });\n};\nvar ImagePool = /*#__PURE__*/ function() {\n    function ImagePool(context, runtime) {\n        _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, ImagePool);\n        this.gradientCache = {};\n        this.patternCache = {};\n        this.context = context;\n        this.runtime = runtime;\n    }\n    return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(ImagePool, [\n        {\n            key: \"getImageSync\",\n            value: function getImageSync(src, ref, callback) {\n                var imageSource = (0,_antv_util__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(src) ? src : src.src;\n                if (IMAGE_CACHE.has(imageSource)) {\n                    var imageCache = IMAGE_CACHE.get(imageSource, ref);\n                    if (imageCache.img.complete) {\n                        callback === null || callback === void 0 || callback(imageCache);\n                        return imageCache;\n                    }\n                }\n                this.getOrCreateImage(src, ref).then(function(cache) {\n                    callback === null || callback === void 0 || callback(cache);\n                })[\"catch\"](function() {\n                //\n                });\n                return null;\n            }\n        },\n        {\n            key: \"getOrCreateImage\",\n            value: function getOrCreateImage(src, ref) {\n                var _this2 = this;\n                var imageSource = (0,_antv_util__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(src) ? src : src.src;\n                if (!(0,_antv_util__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(src) && !IMAGE_CACHE.has(imageSource)) {\n                    var imageCache = {\n                        img: src,\n                        size: [\n                            src.naturalWidth || src.width,\n                            src.naturalHeight || src.height\n                        ],\n                        tileSize: calculateImageTileSize(src)\n                    };\n                    IMAGE_CACHE.put(imageSource, imageCache, ref);\n                }\n                if (IMAGE_CACHE.has(imageSource)) {\n                    var _imageCache = IMAGE_CACHE.get(imageSource, ref);\n                    if (_imageCache.img.complete) {\n                        return Promise.resolve(_imageCache);\n                    }\n                    return new Promise(function(resolve, reject) {\n                        _imageCache.img.addEventListener(\"load\", function() {\n                            _imageCache.size = [\n                                _imageCache.img.naturalWidth || _imageCache.img.width,\n                                _imageCache.img.naturalHeight || _imageCache.img.height\n                            ];\n                            _imageCache.tileSize = calculateImageTileSize(_imageCache.img);\n                            resolve(_imageCache);\n                        });\n                        _imageCache.img.addEventListener(\"error\", function(ev) {\n                            reject(ev);\n                        });\n                    });\n                }\n                return new Promise(function(resolve, reject) {\n                    // @see https://github.com/antvis/g/issues/938\n                    var image = _this2.context.config.createImage();\n                    if (image) {\n                        var _imageCache2 = {\n                            img: image,\n                            size: [\n                                0,\n                                0\n                            ],\n                            tileSize: calculateImageTileSize(image)\n                        };\n                        IMAGE_CACHE.put(imageSource, _imageCache2, ref);\n                        image.onload = function() {\n                            _imageCache2.size = [\n                                image.naturalWidth || image.width,\n                                image.naturalHeight || image.height\n                            ];\n                            _imageCache2.tileSize = calculateImageTileSize(_imageCache2.img);\n                            resolve(_imageCache2);\n                        };\n                        image.onerror = function(ev) {\n                            reject(ev);\n                        };\n                        image.crossOrigin = \"Anonymous\";\n                        image.src = imageSource;\n                    }\n                });\n            }\n        },\n        {\n            key: \"createDownSampledImage\",\n            value: function() {\n                var _createDownSampledImage = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_8___default()(/*#__PURE__*/ _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_5___default()().mark(function _callee(src, ref) {\n                    var imageCache, enableLargeImageOptimization, _ref, _ref$maxDownSampledIm, maxDownSampledImageSize, _ref$downSamplingRate, downSamplingRateThreshold, createImageBitmapFunc, _imageCache$size, originWidth, originHeight, resizedImage, downSamplingRate, updateCache;\n                    return _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_5___default()().wrap(function _callee$(_context) {\n                        while(1)switch(_context.prev = _context.next){\n                            case 0:\n                                _context.next = 2;\n                                return this.getOrCreateImage(src, ref);\n                            case 2:\n                                imageCache = _context.sent;\n                                if (!(typeof imageCache.downSamplingRate !== \"undefined\")) {\n                                    _context.next = 5;\n                                    break;\n                                }\n                                return _context.abrupt(\"return\", imageCache);\n                            case 5:\n                                enableLargeImageOptimization = this.context.config.enableLargeImageOptimization;\n                                _ref = typeof enableLargeImageOptimization === \"boolean\" ? {} : enableLargeImageOptimization, _ref$maxDownSampledIm = _ref.maxDownSampledImageSize, maxDownSampledImageSize = _ref$maxDownSampledIm === void 0 ? 2048 : _ref$maxDownSampledIm, _ref$downSamplingRate = _ref.downSamplingRateThreshold, downSamplingRateThreshold = _ref$downSamplingRate === void 0 ? 0.5 : _ref$downSamplingRate;\n                                createImageBitmapFunc = this.runtime.globalThis.createImageBitmap;\n                                _imageCache$size = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_7___default()(imageCache.size, 2), originWidth = _imageCache$size[0], originHeight = _imageCache$size[1];\n                                resizedImage = imageCache.img;\n                                downSamplingRate = Math.min((maxDownSampledImageSize + maxDownSampledImageSize) / (originWidth + originHeight), Math.max(0.01, Math.min(downSamplingRateThreshold, 0.5)));\n                                updateCache = _babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_6___default()(_babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_6___default()({}, imageCache), {}, {\n                                    downSamplingRate: downSamplingRate\n                                });\n                                IMAGE_CACHE.update(imageCache.img.src, updateCache, ref);\n                                if (!createImageBitmapFunc) {\n                                    _context.next = 25;\n                                    break;\n                                }\n                                _context.prev = 14;\n                                _context.next = 17;\n                                return createImageBitmapFunc(imageCache.img, {\n                                    resizeWidth: originWidth * downSamplingRate,\n                                    resizeHeight: originHeight * downSamplingRate\n                                });\n                            case 17:\n                                resizedImage = _context.sent;\n                                _context.next = 23;\n                                break;\n                            case 20:\n                                _context.prev = 20;\n                                _context.t0 = _context[\"catch\"](14);\n                                downSamplingRate = 1;\n                            case 23:\n                                _context.next = 26;\n                                break;\n                            case 25:\n                                downSamplingRate = 1;\n                            case 26:\n                                updateCache = _babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_6___default()(_babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_6___default()({}, this.getImageSync(src, ref)), {}, {\n                                    downSampled: resizedImage,\n                                    downSamplingRate: downSamplingRate\n                                });\n                                IMAGE_CACHE.update(imageCache.img.src, updateCache, ref);\n                                return _context.abrupt(\"return\", updateCache);\n                            case 29:\n                            case \"end\":\n                                return _context.stop();\n                        }\n                    }, _callee, this, [\n                        [\n                            14,\n                            20\n                        ]\n                    ]);\n                }));\n                function createDownSampledImage(_x, _x2) {\n                    return _createDownSampledImage.apply(this, arguments);\n                }\n                return createDownSampledImage;\n            }()\n        },\n        {\n            key: \"createImageTiles\",\n            value: function() {\n                var _createImageTiles = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_8___default()(/*#__PURE__*/ _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_5___default()().mark(function _callee2(src, tiles, rerender, ref) {\n                    var imageCache, _ref$ownerDocument$de, requestAnimationFrame, cancelAnimationFrame, updateCache;\n                    return _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_5___default()().wrap(function _callee2$(_context2) {\n                        while(1)switch(_context2.prev = _context2.next){\n                            case 0:\n                                _context2.next = 2;\n                                return this.getOrCreateImage(src, ref);\n                            case 2:\n                                imageCache = _context2.sent;\n                                _ref$ownerDocument$de = ref.ownerDocument.defaultView, requestAnimationFrame = _ref$ownerDocument$de.requestAnimationFrame, cancelAnimationFrame = _ref$ownerDocument$de.cancelAnimationFrame;\n                                ImageSlicer.api = {\n                                    requestAnimationFrame: requestAnimationFrame,\n                                    cancelAnimationFrame: cancelAnimationFrame,\n                                    createCanvas: function createCanvas() {\n                                        return _antv_g_lite__WEBPACK_IMPORTED_MODULE_4__.OffscreenCanvasCreator.createCanvas();\n                                    }\n                                };\n                                updateCache = _babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_6___default()(_babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_6___default()({}, imageCache), ImageSlicer.sliceImage(imageCache.img, imageCache.tileSize[0], imageCache.tileSize[0], rerender));\n                                IMAGE_CACHE.update(imageCache.img.src, updateCache, ref);\n                                return _context2.abrupt(\"return\", updateCache);\n                            case 8:\n                            case \"end\":\n                                return _context2.stop();\n                        }\n                    }, _callee2, this);\n                }));\n                function createImageTiles(_x3, _x4, _x5, _x6) {\n                    return _createImageTiles.apply(this, arguments);\n                }\n                return createImageTiles;\n            }()\n        },\n        {\n            key: \"releaseImage\",\n            value: function releaseImage(src, ref) {\n                IMAGE_CACHE.release((0,_antv_util__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(src) ? src : src.src, ref);\n            }\n        },\n        {\n            key: \"releaseImageRef\",\n            value: function releaseImageRef(ref) {\n                IMAGE_CACHE.releaseRef(ref);\n            }\n        },\n        {\n            key: \"getOrCreatePatternSync\",\n            value: function getOrCreatePatternSync(object, pattern, context, $offscreenCanvas, dpr, min, callback) {\n                var patternKey = this.generatePatternKey(pattern);\n                if (patternKey && this.patternCache[patternKey]) {\n                    return this.patternCache[patternKey];\n                }\n                var image = pattern.image, repetition = pattern.repetition, transform = pattern.transform;\n                var src;\n                var needScaleWithDPR = false;\n                // Image URL\n                if ((0,_antv_util__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(image)) {\n                    var imageCache = this.getImageSync(image, object, callback);\n                    src = imageCache === null || imageCache === void 0 ? void 0 : imageCache.img;\n                } else if ($offscreenCanvas) {\n                    src = $offscreenCanvas;\n                    needScaleWithDPR = true;\n                } else {\n                    src = image;\n                }\n                // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/createPattern\n                var canvasPattern = src && context.createPattern(src, repetition);\n                if (canvasPattern) {\n                    var mat;\n                    // @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern/setTransform\n                    if (transform) {\n                        mat = (0,_antv_g_lite__WEBPACK_IMPORTED_MODULE_4__.parsedTransformToMat4)((0,_antv_g_lite__WEBPACK_IMPORTED_MODULE_4__.parseTransform)(transform), new _antv_g_lite__WEBPACK_IMPORTED_MODULE_4__.DisplayObject({}));\n                    } else {\n                        mat = gl_matrix__WEBPACK_IMPORTED_MODULE_10__.identity(gl_matrix__WEBPACK_IMPORTED_MODULE_10__.create());\n                    }\n                    if (needScaleWithDPR) {\n                        gl_matrix__WEBPACK_IMPORTED_MODULE_10__.scale(mat, mat, [\n                            1 / dpr,\n                            1 / dpr,\n                            1\n                        ]);\n                    }\n                    canvasPattern.setTransform({\n                        a: mat[0],\n                        b: mat[1],\n                        c: mat[4],\n                        d: mat[5],\n                        e: mat[12] + min[0],\n                        f: mat[13] + min[1]\n                    });\n                }\n                if (patternKey && canvasPattern) {\n                    this.patternCache[patternKey] = canvasPattern;\n                }\n                return canvasPattern;\n            }\n        },\n        {\n            key: \"getOrCreateGradient\",\n            value: function getOrCreateGradient(params, context) {\n                var key = this.generateGradientKey(params);\n                var type = params.type, steps = params.steps, min = params.min, width = params.width, height = params.height, angle = params.angle, cx = params.cx, cy = params.cy, size = params.size;\n                if (this.gradientCache[key]) {\n                    return this.gradientCache[key];\n                }\n                var gradient = null;\n                if (type === _antv_g_lite__WEBPACK_IMPORTED_MODULE_4__.GradientType.LinearGradient) {\n                    var _computeLinearGradien = (0,_antv_g_lite__WEBPACK_IMPORTED_MODULE_4__.computeLinearGradient)(min, width, height, angle), x1 = _computeLinearGradien.x1, y1 = _computeLinearGradien.y1, x2 = _computeLinearGradien.x2, y2 = _computeLinearGradien.y2;\n                    // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/createLinearGradient\n                    gradient = context.createLinearGradient(x1, y1, x2, y2);\n                } else if (type === _antv_g_lite__WEBPACK_IMPORTED_MODULE_4__.GradientType.RadialGradient) {\n                    var _computeRadialGradien = (0,_antv_g_lite__WEBPACK_IMPORTED_MODULE_4__.computeRadialGradient)(min, width, height, cx, cy, size), x = _computeRadialGradien.x, y = _computeRadialGradien.y, r = _computeRadialGradien.r;\n                    // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/createRadialGradient\n                    gradient = context.createRadialGradient(x, y, 0, x, y, r);\n                }\n                if (gradient) {\n                    steps.forEach(function(_ref2) {\n                        var offset = _ref2.offset, color = _ref2.color;\n                        if (offset.unit === _antv_g_lite__WEBPACK_IMPORTED_MODULE_4__.UnitType.kPercentage) {\n                            var _gradient;\n                            (_gradient = gradient) === null || _gradient === void 0 || _gradient.addColorStop(offset.value / 100, color.toString());\n                        }\n                    });\n                    this.gradientCache[key] = gradient;\n                }\n                return this.gradientCache[key];\n            }\n        },\n        {\n            key: \"generateGradientKey\",\n            value: function generateGradientKey(params) {\n                var type = params.type, min = params.min, width = params.width, height = params.height, steps = params.steps, angle = params.angle, cx = params.cx, cy = params.cy, size = params.size;\n                return \"gradient-\".concat(type, \"-\").concat((angle === null || angle === void 0 ? void 0 : angle.toString()) || 0, \"-\").concat((cx === null || cx === void 0 ? void 0 : cx.toString()) || 0, \"-\").concat((cy === null || cy === void 0 ? void 0 : cy.toString()) || 0, \"-\").concat((size === null || size === void 0 ? void 0 : size.toString()) || 0, \"-\").concat(min[0], \"-\").concat(min[1], \"-\").concat(width, \"-\").concat(height, \"-\").concat(steps.map(function(_ref3) {\n                    var offset = _ref3.offset, color = _ref3.color;\n                    return \"\".concat(offset).concat(color);\n                }).join(\"-\"));\n            }\n        },\n        {\n            key: \"generatePatternKey\",\n            value: function generatePatternKey(pattern) {\n                var image = pattern.image, repetition = pattern.repetition;\n                // only generate cache for Image\n                if ((0,_antv_util__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(image)) {\n                    return \"pattern-\".concat(image, \"-\").concat(repetition);\n                }\n                if (image.nodeName === \"rect\") {\n                    return \"pattern-\".concat(image.entity, \"-\").concat(repetition);\n                }\n            }\n        }\n    ]);\n}();\nImagePool.isSupportTile = !!_antv_g_lite__WEBPACK_IMPORTED_MODULE_4__.OffscreenCanvasCreator.createCanvas();\nfunction calculateImageTileSize(img) {\n    if (!img.complete) {\n        return [\n            0,\n            0\n        ];\n    }\n    var width = img.naturalWidth || img.width, height = img.naturalHeight || img.height;\n    var tileSize = 256;\n    [\n        256,\n        512\n    ].forEach(function(size) {\n        var rows = Math.ceil(height / size);\n        var cols = Math.ceil(width / size);\n        if (rows * cols < 1e3) {\n            tileSize = size;\n        }\n    });\n    return [\n        tileSize,\n        tileSize\n    ];\n}\nvar LoadImagePlugin = /*#__PURE__*/ function() {\n    function LoadImagePlugin() {\n        _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, LoadImagePlugin);\n    }\n    return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(LoadImagePlugin, [\n        {\n            key: \"apply\",\n            value: function apply(context) {\n                var renderingService = context.renderingService, renderingContext = context.renderingContext, imagePool = context.imagePool;\n                var canvas = renderingContext.root.ownerDocument.defaultView;\n                var calculateWithAspectRatio = function calculateWithAspectRatio(object, imageWidth, imageHeight) {\n                    var _object$parsedStyle = object.parsedStyle, width = _object$parsedStyle.width, height = _object$parsedStyle.height;\n                    if (width && !height) {\n                        object.setAttribute(\"height\", imageHeight / imageWidth * width);\n                    } else if (!width && height) {\n                        object.setAttribute(\"width\", imageWidth / imageHeight * height);\n                    }\n                };\n                var handleMounted = function handleMounted(e) {\n                    var object = e.target;\n                    var nodeName = object.nodeName, attributes = object.attributes;\n                    if (nodeName === _antv_g_lite__WEBPACK_IMPORTED_MODULE_4__.Shape.IMAGE) {\n                        var src = attributes.src, keepAspectRatio = attributes.keepAspectRatio;\n                        imagePool.getImageSync(src, object, function(_ref) {\n                            var _ref$img = _ref.img, width = _ref$img.width, height = _ref$img.height;\n                            if (keepAspectRatio) {\n                                calculateWithAspectRatio(object, width, height);\n                            }\n                            // set dirty rectangle flag\n                            object.renderable.dirty = true;\n                            renderingService.dirtify();\n                        });\n                    }\n                };\n                var handleAttributeChanged = function handleAttributeChanged(e) {\n                    var object = e.target;\n                    var attrName = e.attrName, prevValue = e.prevValue, newValue = e.newValue;\n                    if (object.nodeName !== _antv_g_lite__WEBPACK_IMPORTED_MODULE_4__.Shape.IMAGE || attrName !== \"src\") {\n                        return;\n                    }\n                    if (prevValue !== newValue) {\n                        imagePool.releaseImage(prevValue, object);\n                    }\n                    if ((0,_antv_util__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(newValue)) {\n                        imagePool.getOrCreateImage(newValue, object).then(function(_ref2) {\n                            var _ref2$img = _ref2.img, width = _ref2$img.width, height = _ref2$img.height;\n                            if (object.attributes.keepAspectRatio) {\n                                calculateWithAspectRatio(object, width, height);\n                            }\n                            // set dirty rectangle flag\n                            object.renderable.dirty = true;\n                            renderingService.dirtify();\n                        })[\"catch\"](function() {\n                        //\n                        });\n                    }\n                };\n                renderingService.hooks.init.tap(LoadImagePlugin.tag, function() {\n                    canvas.addEventListener(_antv_g_lite__WEBPACK_IMPORTED_MODULE_4__.ElementEvent.MOUNTED, handleMounted);\n                    canvas.addEventListener(_antv_g_lite__WEBPACK_IMPORTED_MODULE_4__.ElementEvent.ATTR_MODIFIED, handleAttributeChanged);\n                });\n                renderingService.hooks.destroy.tap(LoadImagePlugin.tag, function() {\n                    canvas.removeEventListener(_antv_g_lite__WEBPACK_IMPORTED_MODULE_4__.ElementEvent.MOUNTED, handleMounted);\n                    canvas.removeEventListener(_antv_g_lite__WEBPACK_IMPORTED_MODULE_4__.ElementEvent.ATTR_MODIFIED, handleAttributeChanged);\n                });\n            }\n        }\n    ]);\n}();\nLoadImagePlugin.tag = \"LoadImage\";\nvar Plugin = /*#__PURE__*/ function(_AbstractRendererPlug) {\n    function Plugin() {\n        var _this;\n        _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Plugin);\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        _this = _babel_runtime_helpers_callSuper__WEBPACK_IMPORTED_MODULE_2___default()(this, Plugin, [].concat(args));\n        _this.name = \"image-loader\";\n        return _this;\n    }\n    _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(Plugin, _AbstractRendererPlug);\n    return _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Plugin, [\n        {\n            key: \"init\",\n            value: function init(runtime) {\n                // @ts-ignore\n                this.context.imagePool = new ImagePool(this.context, runtime);\n                this.addRenderingPlugin(new LoadImagePlugin());\n            }\n        },\n        {\n            key: \"destroy\",\n            value: function destroy() {\n                this.removeAllRenderingPlugins();\n            }\n        }\n    ]);\n}(_antv_g_lite__WEBPACK_IMPORTED_MODULE_4__.AbstractRendererPlugin);\n //# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/@antv+g-plugin-image-loader@2.1.18/node_modules/@antv/g-plugin-image-loader/dist/index.esm.js\n");

/***/ })

};
;
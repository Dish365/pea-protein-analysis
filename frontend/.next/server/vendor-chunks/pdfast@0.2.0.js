"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/pdfast@0.2.0";
exports.ids = ["vendor-chunks/pdfast@0.2.0"];
exports.modules = {

/***/ "(ssr)/../node_modules/.pnpm/pdfast@0.2.0/node_modules/pdfast/src/helper.js":
/*!****************************************************************************!*\
  !*** ../node_modules/.pnpm/pdfast@0.2.0/node_modules/pdfast/src/helper.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\nvar self = module.exports;\nmodule.exports.isNumber = function(x) {\n    return typeof x === \"number\";\n};\nmodule.exports.findMin = function(arr) {\n    if (arr.length === 0) {\n        return Infinity;\n    }\n    var curr = arr[0];\n    for(var i = 1; i < arr.length; i++){\n        curr = Math.min(curr, arr[i]);\n    }\n    return curr;\n};\nmodule.exports.findMax = function(arr) {\n    if (arr.length === 0) {\n        return -Infinity;\n    }\n    var curr = arr[0];\n    for(var i = 1; i < arr.length; i++){\n        curr = Math.max(curr, arr[i]);\n    }\n    return curr;\n};\nmodule.exports.findMinMulti = function(arr) {\n    var curr = self.findMin(arr[0]);\n    for(var i = 1; i < arr.length; i++){\n        curr = Math.min(curr, self.findMin(arr[i]));\n    }\n    return curr;\n};\nmodule.exports.findMaxMulti = function(arr) {\n    var curr = self.findMax(arr[0]);\n    for(var i = 1; i < arr.length; i++){\n        curr = Math.max(curr, self.findMax(arr[i]));\n    }\n    return curr;\n};\nmodule.exports.inside = function(min, max, x) {\n    return min <= x && x <= max;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3BkZmFzdEAwLjIuMC9ub2RlX21vZHVsZXMvcGRmYXN0L3NyYy9oZWxwZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxJQUFJQSxPQUFPQyxPQUFPQyxPQUFPO0FBRXpCRCx1QkFBdUIsR0FBRyxTQUFVRyxDQUFDO0lBQ25DLE9BQVEsT0FBT0EsTUFBTTtBQUN2QjtBQUVBSCxzQkFBc0IsR0FBRyxTQUFVSyxHQUFHO0lBQ3BDLElBQUlBLElBQUlDLE1BQU0sS0FBSyxHQUFHO1FBQ3BCLE9BQU9DO0lBQ1Q7SUFFQSxJQUFJQyxPQUFPSCxHQUFHLENBQUMsRUFBRTtJQUNqQixJQUFLLElBQUlJLElBQUksR0FBR0EsSUFBSUosSUFBSUMsTUFBTSxFQUFFRyxJQUFLO1FBQ25DRCxPQUFPRSxLQUFLQyxHQUFHLENBQUNILE1BQU1ILEdBQUcsQ0FBQ0ksRUFBRTtJQUM5QjtJQUNBLE9BQU9EO0FBQ1Q7QUFFQVIsc0JBQXNCLEdBQUcsU0FBVUssR0FBRztJQUNwQyxJQUFJQSxJQUFJQyxNQUFNLEtBQUssR0FBRztRQUNwQixPQUFPLENBQUNDO0lBQ1Y7SUFFQSxJQUFJQyxPQUFPSCxHQUFHLENBQUMsRUFBRTtJQUNqQixJQUFLLElBQUlJLElBQUksR0FBR0EsSUFBSUosSUFBSUMsTUFBTSxFQUFFRyxJQUFLO1FBQ25DRCxPQUFPRSxLQUFLRyxHQUFHLENBQUNMLE1BQU1ILEdBQUcsQ0FBQ0ksRUFBRTtJQUM5QjtJQUNBLE9BQU9EO0FBQ1Q7QUFFQVIsMkJBQTJCLEdBQUcsU0FBVUssR0FBRztJQUN6QyxJQUFJRyxPQUFPVCxLQUFLSyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxFQUFFO0lBQzlCLElBQUssSUFBSUksSUFBSSxHQUFHQSxJQUFJSixJQUFJQyxNQUFNLEVBQUVHLElBQUs7UUFDbkNELE9BQU9FLEtBQUtDLEdBQUcsQ0FBQ0gsTUFBTVQsS0FBS0ssT0FBTyxDQUFDQyxHQUFHLENBQUNJLEVBQUU7SUFDM0M7SUFDQSxPQUFPRDtBQUNUO0FBRUFSLDJCQUEyQixHQUFHLFNBQVVLLEdBQUc7SUFDekMsSUFBSUcsT0FBT1QsS0FBS2EsT0FBTyxDQUFDUCxHQUFHLENBQUMsRUFBRTtJQUM5QixJQUFLLElBQUlJLElBQUksR0FBR0EsSUFBSUosSUFBSUMsTUFBTSxFQUFFRyxJQUFLO1FBQ25DRCxPQUFPRSxLQUFLRyxHQUFHLENBQUNMLE1BQU1ULEtBQUthLE9BQU8sQ0FBQ1AsR0FBRyxDQUFDSSxFQUFFO0lBQzNDO0lBQ0EsT0FBT0Q7QUFDVDtBQUVBUixxQkFBcUIsR0FBRyxTQUFVVyxHQUFHLEVBQUVFLEdBQUcsRUFBRVYsQ0FBQztJQUMzQyxPQUFPLE9BQVFBLEtBQU9BLEtBQUtVO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvY2Vzcy1hbmFseXNpcy1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvLnBucG0vcGRmYXN0QDAuMi4wL25vZGVfbW9kdWxlcy9wZGZhc3Qvc3JjL2hlbHBlci5qcz9jMDZhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHNlbGYgPSBtb2R1bGUuZXhwb3J0cztcblxubW9kdWxlLmV4cG9ydHMuaXNOdW1iZXIgPSBmdW5jdGlvbiAoeCkge1xuICByZXR1cm4gKHR5cGVvZiB4ID09PSAnbnVtYmVyJyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5maW5kTWluID0gZnVuY3Rpb24gKGFycikge1xuICBpZiAoYXJyLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBJbmZpbml0eTtcbiAgfVxuXG4gIHZhciBjdXJyID0gYXJyWzBdO1xuICBmb3IgKHZhciBpID0gMTsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgIGN1cnIgPSBNYXRoLm1pbihjdXJyLCBhcnJbaV0pO1xuICB9XG4gIHJldHVybiBjdXJyO1xufTtcblxubW9kdWxlLmV4cG9ydHMuZmluZE1heCA9IGZ1bmN0aW9uIChhcnIpIHtcbiAgaWYgKGFyci5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gLUluZmluaXR5O1xuICB9XG5cbiAgdmFyIGN1cnIgPSBhcnJbMF07XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgY3VyciA9IE1hdGgubWF4KGN1cnIsIGFycltpXSk7XG4gIH1cbiAgcmV0dXJuIGN1cnI7XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5maW5kTWluTXVsdGkgPSBmdW5jdGlvbiAoYXJyKSB7XG4gIHZhciBjdXJyID0gc2VsZi5maW5kTWluKGFyclswXSk7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgY3VyciA9IE1hdGgubWluKGN1cnIsIHNlbGYuZmluZE1pbihhcnJbaV0pKTtcbiAgfVxuICByZXR1cm4gY3Vycjtcbn07XG5cbm1vZHVsZS5leHBvcnRzLmZpbmRNYXhNdWx0aSA9IGZ1bmN0aW9uIChhcnIpIHtcbiAgdmFyIGN1cnIgPSBzZWxmLmZpbmRNYXgoYXJyWzBdKTtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHtcbiAgICBjdXJyID0gTWF0aC5tYXgoY3Vyciwgc2VsZi5maW5kTWF4KGFycltpXSkpO1xuICB9XG4gIHJldHVybiBjdXJyO1xufTtcblxubW9kdWxlLmV4cG9ydHMuaW5zaWRlID0gZnVuY3Rpb24gKG1pbiwgbWF4LCB4KSB7XG4gIHJldHVybiAobWluIDw9IHgpICYmICh4IDw9IG1heCk7XG59O1xuIl0sIm5hbWVzIjpbInNlbGYiLCJtb2R1bGUiLCJleHBvcnRzIiwiaXNOdW1iZXIiLCJ4IiwiZmluZE1pbiIsImFyciIsImxlbmd0aCIsIkluZmluaXR5IiwiY3VyciIsImkiLCJNYXRoIiwibWluIiwiZmluZE1heCIsIm1heCIsImZpbmRNaW5NdWx0aSIsImZpbmRNYXhNdWx0aSIsImluc2lkZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/pdfast@0.2.0/node_modules/pdfast/src/helper.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/.pnpm/pdfast@0.2.0/node_modules/pdfast/src/index.js":
/*!***************************************************************************!*\
  !*** ../node_modules/.pnpm/pdfast@0.2.0/node_modules/pdfast/src/index.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar DEFAULT_SIZE = 50;\nvar DEFAULT_WIDTH = 2;\nvar LN_2 = Math.log(2);\nvar self = module.exports;\nvar helper = __webpack_require__(/*! ./helper */ \"(ssr)/../node_modules/.pnpm/pdfast@0.2.0/node_modules/pdfast/src/helper.js\");\n// Triangle\nfunction kernel(x) {\n    return 1 - Math.abs(x);\n}\n/**\n * Get min and max value for the pdf, covering all arr data range while respecting options' data\n * @param arr\n * @param options\n * @returns {*}\n */ module.exports.getUnifiedMinMax = function(arr, options) {\n    return self.getUnifiedMinMaxMulti([\n        arr\n    ], options);\n};\nmodule.exports.getUnifiedMinMaxMulti = function(arrMulti, options) {\n    options = options || {};\n    var relaxMin = false;\n    var relaxMax = false;\n    var width = helper.isNumber(options.width) ? options.width : DEFAULT_WIDTH;\n    var size = helper.isNumber(options.size) ? options.size : DEFAULT_SIZE;\n    var min = helper.isNumber(options.min) ? options.min : (relaxMin = true, helper.findMinMulti(arrMulti));\n    var max = helper.isNumber(options.max) ? options.max : (relaxMax = true, helper.findMaxMulti(arrMulti));\n    var range = max - min;\n    var step = range / (size - 1);\n    // Relax?\n    if (relaxMin) {\n        min = min - 2 * width * step;\n    }\n    if (relaxMax) {\n        max = max + 2 * width * step;\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\nmodule.exports.create = function(arr, options) {\n    options = options || {};\n    if (!arr || arr.length === 0) {\n        return [];\n    }\n    var size = helper.isNumber(options.size) ? options.size : DEFAULT_SIZE;\n    var width = helper.isNumber(options.width) ? options.width : DEFAULT_WIDTH;\n    var normalizedMinMax = self.getUnifiedMinMax(arr, {\n        size: size,\n        width: width,\n        min: options.min,\n        max: options.max\n    });\n    var min = normalizedMinMax.min;\n    var max = normalizedMinMax.max;\n    var range = max - min;\n    var step = range / (size - 1);\n    if (range === 0) {\n        // Special case...\n        return [\n            {\n                x: min,\n                y: 1\n            }\n        ];\n    }\n    // Good to go\n    var buckets = [];\n    for(var i = 0; i < size; i++){\n        buckets.push({\n            x: min + i * step,\n            y: 0\n        });\n    }\n    var xToBucket = function(x) {\n        return Math.floor((x - min) / step);\n    };\n    var partialArea = generatePartialAreas(kernel, width);\n    var fullArea = partialArea[width];\n    var c = partialArea[width - 1] - partialArea[width - 2];\n    var initalValue = 0;\n    arr.forEach(function(x) {\n        var bucket = xToBucket(x);\n        // Totally outside?\n        if (bucket + width < 0 || bucket - width >= buckets.length) {\n            return;\n        }\n        var start = Math.max(bucket - width, 0);\n        var mid = bucket;\n        var end = Math.min(bucket + width, buckets.length - 1);\n        var leftBlockCount = start - (bucket - width);\n        var rightBlockCount = bucket + width - end;\n        var spilledAreaLeft = partialArea[-width - 1 + leftBlockCount] || 0;\n        var spilledAreaRight = partialArea[-width - 1 + rightBlockCount] || 0;\n        var weight = fullArea / (fullArea - spilledAreaLeft - spilledAreaRight);\n        if (leftBlockCount > 0) {\n            initalValue += weight * (leftBlockCount - 1) * c;\n        }\n        // Add grads\n        var startGradPos = Math.max(0, bucket - width + 1);\n        if (helper.inside(0, buckets.length - 1, startGradPos)) {\n            buckets[startGradPos].y += weight * 1 * c;\n        }\n        if (helper.inside(0, buckets.length - 1, mid + 1)) {\n            buckets[mid + 1].y -= weight * 2 * c;\n        }\n        if (helper.inside(0, buckets.length - 1, end + 1)) {\n            buckets[end + 1].y += weight * 1 * c;\n        }\n    });\n    var accumulator = initalValue;\n    var gradAccumulator = 0;\n    var area = 0;\n    buckets.forEach(function(bucket) {\n        gradAccumulator += bucket.y;\n        accumulator += gradAccumulator;\n        bucket.y = accumulator;\n        area += accumulator;\n    });\n    // Normalize\n    if (area > 0) {\n        buckets.forEach(function(bucket) {\n            bucket.y /= area;\n        });\n    }\n    return buckets;\n};\nfunction generatePartialAreas(kernel, width) {\n    var partialAreas = {};\n    var accumulator = 0;\n    for(var i = -width; i <= width; i++){\n        accumulator += kernel(i / width);\n        partialAreas[i] = accumulator;\n    }\n    return partialAreas;\n}\nmodule.exports.getExpectedValueFromPdf = function(pdf) {\n    if (!pdf || pdf.length === 0) {\n        return undefined;\n    }\n    var expected = 0;\n    pdf.forEach(function(obj) {\n        expected += obj.x * obj.y;\n    });\n    return expected;\n};\nmodule.exports.getXWithLeftTailArea = function(pdf, area) {\n    if (!pdf || pdf.length === 0) {\n        return undefined;\n    }\n    var accumulator = 0;\n    var last = 0;\n    for(var i = 0; i < pdf.length; i++){\n        last = i;\n        accumulator += pdf[i].y;\n        if (accumulator >= area) {\n            break;\n        }\n    }\n    return pdf[last].x;\n};\nmodule.exports.getPerplexity = function(pdf) {\n    if (!pdf || pdf.length === 0) {\n        return undefined;\n    }\n    var entropy = 0;\n    pdf.forEach(function(obj) {\n        var ln = Math.log(obj.y);\n        if (isFinite(ln)) {\n            entropy += obj.y * ln;\n        }\n    });\n    entropy = -entropy / LN_2;\n    return Math.pow(2, entropy);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/pdfast@0.2.0/node_modules/pdfast/src/index.js\n");

/***/ })

};
;